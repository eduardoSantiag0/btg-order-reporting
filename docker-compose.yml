services:

  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/btg-order-reporting
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - btg-network
    volumes:
      - ./logs:/app/logs  # <host>:<container>

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - btg-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  postgres:
    image: postgres:16-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=btg-order-reporting
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    networks:
      - btg-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d btg-order-reporting" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s


networks:
  btg-network:
    driver: bridge